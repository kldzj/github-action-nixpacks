name: 'Build Containers with Nixpacks and'
description: 'Build a docker container with nixpacks on GitHub CI and push to a registry'
author: 'Michael Bianco'
branding:
  icon: 'box'
  color: 'green'

inputs:
  tags:
    description: 'List of tags to apply to the built image'
    required: true
  labels:
    description: 'List of metadata for an image'
    required: false
  platforms:
    description: 'List of target platforms for the build'
    required: false
  context:
    description: "Build's context is the set of files located in the specified PATH"
    required: true
    default: '.'
  pkgs:
    description: 'Provide additional nix packages to install in the environment'
    required: false
  libs:
    description: 'Provide additional libraries to install in the environment'
    required: false
  apt:
    description: 'Provide additional apt packages to install in the environment'
    required: false
  install-cmd:
    description: 'Override the install command'
    required: false
  build-cmd:
    description: 'Override the build command'
    required: false
  start-cmd:
    description: 'Override the start command'
    required: false
  env:
    description: 'Provide additional environment variables to set'
    required: false
  push:
    description: 'Boolean to determine if the built image should be pushed'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    # TODO can we remove this?
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    # TODO should detect if qemu is needed based on current vs target platform
    - uses: docker/setup-qemu-action@v3
      if: inputs.platforms != ''

    - run: entrypoint.sh
      shell: bash
      env:
        INPUT_TAGS: ${{ inputs.tags }}
        INPUT_LABELS: ${{ inputs.labels }}
        INPUT_PLATFORMS: ${{ inputs.platforms }}
        INPUT_CONTEXT: ${{ inputs.context }}
        INPUT_PKGS: ${{ inputs.pkgs }}
        INPUT_LIBS: ${{ inputs.libs }}
        INPUT_APT: ${{ inputs.apt }}
        INPUT_PUSH: ${{ inputs.push }}
        INPUT_ENV: ${{ inputs.env }}
        INPUT_INSTALL_CMD: ${{ inputs.install-cmd }}
        INPUT_BUILD_CMD: ${{ inputs.build-cmd }}
        INPUT_START_CMD: ${{ inputs.start-cmd }}
